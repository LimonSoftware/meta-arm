From a5dbec871f2acf01b5701a646584ad55d0ac1db7 Mon Sep 17 00:00:00 2001
From: Jerome Forissier <jerome@forissier.org>
Date: Tue, 26 May 2020 11:35:32 +0200
Subject: [PATCH 4/6] Cleanup unused comp-cflags$(sm) from libgcc lookup
 commands

The compiler is not expected to need any flag from $(comp-cflags$(sm))
to locate the compiler runtime libraries, and in fact this variable is
always undefined at the point it is used. Indeed, comp-cflags$(sm) is
set in mk/compile.mk, i.e., after mk/gcc.mk (or mk/clang.mk) has
been included.

Therefore, remove the useless flags.

Signed-off-by: Jerome Forissier <jerome@forissier.org>
Upstream-Status: Accepted [https://github.com/OP-TEE/optee_os/pull/3891]
Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
---
 mk/clang.mk | 10 +++++++++-
 mk/gcc.mk   |  2 +-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/mk/clang.mk b/mk/clang.mk
index 28367e73..34034a9c 100644
--- a/mk/clang.mk
+++ b/mk/clang.mk
@@ -45,7 +45,15 @@ nostdinc$(sm)	:= -nostdinc -isystem $(shell $(CC$(sm)) \
 comp-cflags-warns-clang := -Wno-language-extension-token \
 			 -Wno-gnu-zero-variadic-macro-arguments
 
-libgcc$(sm)  	:=
+# Note, use the compiler runtime library (libclang_rt.builtins.*.a) instead of
+# libgcc for clang
+libgcc$(sm)	:= $(shell $(CC$(sm)) $(CFLAGS$(arch-bits-$(sm))) \
+			-rtlib=compiler-rt -print-libgcc-file-name 2> /dev/null)
+
+# Core ASLR relies on the executable being ready to run from its preferred load
+# address, because some symbols are used before the MMU is enabled and the
+# relocations are applied.
+ldflag-apply-dynamic-relocs := --apply-dynamic-relocs
 
 # Define these to something to discover accidental use
 CC		:= false
diff --git a/mk/gcc.mk b/mk/gcc.mk
index 1f2c5990..c53a23b1 100644
--- a/mk/gcc.mk
+++ b/mk/gcc.mk
@@ -12,7 +12,7 @@ nostdinc$(sm)	:= -nostdinc -isystem $(shell $(CC$(sm)) \
 			-print-file-name=include 2> /dev/null)
 
 # Get location of libgcc from gcc
-libgcc$(sm)  	:= $(shell $(CC$(sm)) $(CFLAGS$(arch-bits-$(sm))) $(comp-cflags$(sm)) \
+libgcc$(sm)  	:= $(shell $(CC$(sm)) $(CFLAGS$(arch-bits-$(sm))) \
 			-print-libgcc-file-name 2> /dev/null)
 
 # Define these to something to discover accidental use
-- 
2.17.1

