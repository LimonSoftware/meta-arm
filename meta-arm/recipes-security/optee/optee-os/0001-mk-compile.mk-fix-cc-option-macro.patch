From 1ec374238f537eb0e3024d0db45f1fe3b5d471cc Mon Sep 17 00:00:00 2001
From: Jerome Forissier <jerome@forissier.org>
Date: Wed, 20 May 2020 10:50:00 +0200
Subject: [PATCH 1/6] mk/compile.mk: fix cc-option macro

There are (at least) three issues with the cc-option macro:

1. When COMPILER=clang: when presented with a supported but unused
   option, Clang emits a warning to stderr (and returns a success code
   of 0). Therefore it is incorrect to check stderr to determine if an
   option is supported or not; we should rely on the return status
   instead.
2. When COMPILER=clang, the compile command $(CC$(sm)) contains an
   equal sign (e.g., clang --target=arm-linux-gnueabihf). This is not
   expected in the cc-option macro, currently only flags are allowed to
   potentially contain an equal sign. This messes with the caching of
   the test result.
3. The macro should not cache the return value when an option is not
   supported. For instance, if we have:
     A := $(call cc-option,--not-supported,a)
     B := $(call cc-option,--not-supported,b)
   ...we expect A to be "a" and B to be "b". The current implementation
   returns "a" in both cases.

This commit fixes the above problems.

Fixes: 989ac108b0ef ("mk/compile.mk: add cc-option macro")
Signed-off-by: Jerome Forissier <jerome@forissier.org>
Upstream-Status: Accepted [https://github.com/OP-TEE/optee_os/pull/3891]
Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
---
 mk/compile.mk | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/mk/compile.mk b/mk/compile.mk
index ddeb408f..9868ddd1 100644
--- a/mk/compile.mk
+++ b/mk/compile.mk
@@ -17,12 +17,12 @@ objs		:=
 # Disable all builtin rules
 .SUFFIXES:
 
-__cc-option = $(if $(shell $(CC$(sm)) $(1) -c -x c /dev/null -o /dev/null 2>&1 >/dev/null),$(2),$(1))
-_cc-opt-cached-var-name = cached-cc-option$(subst =,~,$(strip $(1)))$(subst $(empty) $(empty),,$(CC$(sm)))
+_cc-option-supported = $(if $(shell $(CC$(sm)) $(1) -c -x c /dev/null -o /dev/null 2>/dev/null >/dev/null || echo "Not supported"),,1)
+_cc-opt-cached-var-name = $(subst =,~,$(strip cached-cc-option-$(1)-$(subst $(empty) $(empty),,$(CC$(sm)))))
 define _cc-option
-$(eval _cached := $(call _cc-opt-cached-var-name,$1))
-$(eval $(_cached) := $(if $(filter $(origin $(_cached)),undefined),$(call __cc-option,$(1),$(2)),$($(_cached))))
-$($(_cached))
+$(eval _var_name := $(call _cc-opt-cached-var-name,$1))
+$(eval $(_var_name) := $(if $(filter $(origin $(_var_name)),undefined),$(call _cc-option-supported,$(1)),$($(_var_name))))
+$(if $($(_var_name)),$(1),$(2))
 endef
 cc-option = $(strip $(call _cc-option,$(1),$(2)))
 
-- 
2.17.1

